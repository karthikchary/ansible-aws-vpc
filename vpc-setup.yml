--- 
- 
  connection: local
  gather_facts: false
  hosts: localhost
  tasks: 
    - name: Import VPC Variables
      include_vars: vars/vpc_setup.txt
      
    - name: "Create vprofile VPC Inst"
      ec2_vpc_net: 
        cidr_block: "{{ vpcCidr }}"
        dns_hostnames: true
        dns_support: true
        name: "{{ vpc_name }}"
        region: "{{ region }}"
        state: "{{ state }}"
        tenancy: default
      register: vpcout

    # - debug: 
    #     var: vpcout

    - name: create Public subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub1
      register: pubsub1_out

    - name: create Public subnet 2 in zone2
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub2
      register: pubsub2_out

    - name: create Public subnet 3 in zone3
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ PubSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-pubsub3
      register: pubsub3_out
  
    - name: create Private subnet 1 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone1 }}"
        state: "{{ state }}"
        cidr: "{{ PriSub1Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub1
      register: privsub1_out

    - name: create Private subnet 2 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone2 }}"
        state: "{{ state }}"
        cidr: "{{ PriSub2Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub2
      register: privsub2_out
    
    - name: create Private subnet 3 in zone1
      ec2_vpc_subnet:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        az: "{{ zone3 }}"
        state: "{{ state }}"
        cidr: "{{ PriSub3Cidr }}"
        map_public: yes
        resource_tags:
          Name: vprofile-privsub3
      register: privsub3_out

    - name: Internet Gateway setup
      ec2_vpc_igw:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        state: "{{ state }}"
        resource_tags:
          Name: vprofile-IGW
      register: igw_out

    - name: Route Table setup
      ec2_vpc_route_table: 
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags: 
          Name: vprofile-PubRT
        subnets:
          - "{{ pubsub1_out.subnet.id }}"
          - "{{ pubsub2_out.subnet.id }}"
          - "{{ pubsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_out.gateway_id }}"
      register: pubRt_out
    
    - name: Create a new nat gateway and allocate new EIP if a nat gateway does not yet exist in the environment
      ec2_vpc_nat_gateway:
        state: "{{ state }}"
        subnet_id: "{{ pubsub1_out.subnet.id}}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: NATGW_out

    - name: Set up the Private subnet route Table
      ec2_vpc_route_table:
        vpc_id: "{{ vpcout.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: vprofile_PrivRT
        subnets:
          - "{{ privsub1_out.subnet.id }}"
          - "{{ privsub2_out.subnet.id }}"
          - "{{ privsub3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ NATGW_out.nat_gateway_id }}"
      register: privRT_out

    - debug: 
        var: "{{item}}"
      loop: 
        - vpcout.vpc.id
        - pubsub1_out.subnet.id
        - pubsub2_out.subnet.id
        - pubsub3_out.subnet.id
        - privsub1_out.subnet.id
        - privsub2_out.subnet.id
        - privsub3_out.subnet.id
        - igw_out.gateway_id
        - pubRt_out.route_table.id
        - NATGW_out.nat_gateway_id
        - privRT_out.route_table.id

    - set_fact:
        vpc_id: "{{ vpcout.vpc.id }}"
        pubsub1_id: "{{ pubsub1_out.subnet.id }}"
        pubsub2_id: "{{ pubsub2_out.subnet.id }}"
        pubsub3_id: "{{ pubsub3_out.subnet.id }}"
        privsub1_id: "{{ privsub1_out.subnet.id }}"
        privsub2_id: "{{ privsub2_out.subnet.id }}"
        privsub3_id: "{{ privsub3_out.subnet.id }}"
        igwid: "{{ igw_out.gateway.id }}"
        pubRt_id: "{{ pubRt_out.route_table.id }}"
        NATGWid: "{{  NATGW_out.nat_gateway.id }}"
        privRTid: "{{ privRTid.route_table.id }}"
        cacheable: yes

    - name: Create variables file for VPC outpt
      copy:
        content: "vpcid: {{ vpcout.vpc.id }}\n pubsub1_id: {{ pubsub1_out.subnet.id }}\n pubsub2_id: {{ pubsub2_out.subnet.id }}\n pubsub3_id: {{ pubsub3_out.subnet.id }}\n privsub1_id: {{ privsub1_out.subnet.id }}\n privsub2_id: {{ privsub2_out.subnet.id }}\n privsub3_id: {{ privsub3_out.subnet.id }}\n igwid: {{ igw_out.gateway.id }}\n pubRt_id: {{ pubRt_out.route_table.id }}\n NATGWid: {{  NATGW_out.nat_gateway.id }}\n privRTid: {{ privRTid.route_table.id }}"
        dest: vars/vpc-output_vars

        